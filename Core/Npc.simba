{* Reflection Npc Functions

   This Contains all the current functions relating to Npc's
   The Cache Id Can be found Using the Npc tool found in the tools Folder.
   The ID is specific to each individual monster in runescape, this means
   you must get the ID for each one. This allows us to be much more
   accurate than if just using the general ID.

   Thanks To Borland for the Npc Work.

*}



(*
R_GetNpcsLoc
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_GetNpcsLoc(CacheId:TintegerArray):TPointArray;

Returns all nearby Npc's Current Location with the Id given by
the CacheId.

.. note::

  by elfyyy

*)
function R_GetNpcsLoc(CacheId:TintegerArray):TPointArray;
var
  i, l, BaseX, BaseY, Node, Def: Integer;

begin
  BaseX := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseX) * -2001773755);
  BaseY := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseY) * -1712339069);
  l := high(CacheId);
  SetLength(Result, 100);
  for i := 0 to l do
  begin
    Node := SmartGetFieldArrayObject(SmartCurrentTarget, 0, HookNPCs, CacheId[i]);
    Def := SmartGetFieldObject(SmartCurrentTarget, Node, HookNPCDef);
    if Def = 0 then
    begin
      SmartFreeObject(SmartCurrentTarget, Node);
      SmartFreeObject(SmartCurrentTarget, Def);
      continue;
    end;
    SetLength(Result, (i + 1));
    result[i].x := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseX) * HookGetBaseXMultiplier) + (SmartGetFieldInt(SmartCurrentTarget, Node, HookCharacterX) * HookCharacterXMultiplier) div 128;
    result[i].y := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseY) * HookGetBaseYMultiplier) + (SmartGetFieldInt(SmartCurrentTarget, Node, HookCharacterY) * HookCharacterYMultiplier) div 128;
    SmartFreeObject(SmartCurrentTarget, Node);
    SmartFreeObject(SmartCurrentTarget, Def);
  end;
  SortTpaFrom(Result, Point(10000,10000));
  result:= RemoveDeadTPA(result);
end;

(*
R_GetNpcLoc
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_GetNpcLoc(CacheId:TintegerArray):TPointArray;

Returns Location of Given NPC

.. note::

  by elfyyy

*)
function R_GetNpcLoc(CacheId:integer):TPointArray;
begin
  result := R_GetNpcsLoc([CacheId]);
end;

(*
R_GetNpcHp
~~~~~~~~~~~~~~

.. code-block:: pascal

    function R_GetNpcHp(CacheId:integer):integer;

Returns Current hp of given npc

.. note::

  by elfyyy

*)
function R_GetNpcHp(CacheId:integer):integer;
var
  Mid, BaseX, BaseY, Node: Integer;

begin
  BaseX := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseX) * -2001773755);
  BaseY := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseY) * -1712339069);
  Node := SmartGetFieldArrayObject(SmartCurrentTarget, 0, HookNPCs, CacheId);
  Mid := ((SmartGetFieldInt(SmartCurrentTarget, Node, HookGethealth) * HookgethealthMultiplier) / 30);
  if Mid < 0 then
  begin
    result := 0;
    SmartFreeObject(SmartCurrentTarget, Node);
    exit;
  end;
  Result := Mid;
  SmartFreeObject(SmartCurrentTarget, Node);
end;

(*
R_IsNpcAnimating
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_IsNpcAnimating(CacheId:integer):Boolean;

Returns true if given npc is animating.

.. note::

  by elfyyy

*)
function IsNpcAnimating(CacheId:integer):Boolean;
var
  Mid, BaseX, BaseY, Node, Def: Integer;
begin
  result := false;
  BaseX := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseX) * -2001773755);
  BaseY := (SmartGetFieldInt(SmartCurrentTarget, 0, HookGetBaseY) * -1712339069);
  Node := SmartGetFieldArrayObject(SmartCurrentTarget, 0, HookNPCs, CacheId);
  Def := SmartGetFieldObject(SmartCurrentTarget, Node, HookNPCDef);
  Mid := (SmartGetFieldInt(SmartCurrentTarget, Node, HookAnimation ) * -722206993);
  if mid > -1 then
    result := true;
  SmartFreeObject(SmartCurrentTarget, Node);
  SmartFreeObject(SmartCurrentTarget, Def);
end;
