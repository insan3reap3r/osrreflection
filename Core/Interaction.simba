(*
R_IsUpAction
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_IsUpAction: Boolean;

Returns true if there is uptext and it doesn't say "Walk here".

.. note::

  by Krazy_Meerkat

*)
function R_IsUpAction: Boolean;
begin
  Result:= false;
  if (not(R_GetUpText = '') and not(R_IsUpText('Walk'))) then
    Result:= true;
end;

{*R_ChooseOptionEx
~~~~~~~~~~~~

.. code-block:: pascal

    function R_ChooseOptionEx(Option: String): Boolean;

Clicks on given option in open menu.
If the option appears twice, avoid, close the menu and try again.

.. note::

  by Krazy_Meerkat

*}
function R_ChooseOptionEx(Option: String): Boolean;
var
  Index, MenuX, MenuY, MenuWidth, XOff, YOff, i, l, h, k: Integer;
  Options: TStringArray;
begin
  Options := R_GetMenuOptions;
  if (not R_IsMenuOpen) then
    Exit;
  H := High(Options);
  k:= 0;
  for i := 0 To H do
  begin
    if (Pos(Option, Options[i]) > 0) then
    begin
      inc(k);
      l:= i;
    end;
  end;
  if (k = 1) then
  begin
    Index := R_GetMenuIndex(Option, Options);
  end else
    Index := -1;
  if (Index = -1) then
    Index := R_GetMenuIndex('Cancel', Options);
  MenuX := SmartGetFieldInt(SmartCurrentTarget, 0, client_menuX) * client_menuX_Multiplier + 4;
  MenuY := SmartGetFieldInt(SmartCurrentTarget, 0, client_menuY) * client_menuY_Multiplier + 4;
  MenuWidth := SmartGetFieldInt(SmartCurrentTarget, 0, client_menuWidth) * client_menuWidth_Multiplier;
  XOff := RandomRange(4, MenuWidth - 4);
  YOff := RandomRange(20, 25) + (Index * 15);
  MMouse(MenuX + XOff, MenuY + YOff, 2, 2);
  Sleep(RandomRange(100, 250));
  ClickMouse2(Mouse_Left);
  Result := True;
end;


(*
R_MouseTile
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_MouseTile(Tile: TPoint; ranx, rany, ClickType: Integer): Boolean;

Moves then clicks mouse (will only move if 'mouse_move' passed).

.. note::

  by Krazy_Meerkat

*)
function R_MouseTile(Tile: TPoint; ranx, rany, ClickType: Integer): Boolean;
var
  Tilex, Tiley: Integer;
  Tile2: TPoint;
begin
  Result:= false;
  Tile2.x:= 0;
  Tile2.y:= 0;
  Tile2:= R_TileToMs(Tile);
  if (Tile2.x = 0) or (Tile2.y = 0) or (Tile2.x > 40000) or (Tile2.y > 40000) or (Tile2.x < -40000) or (Tile2.y < -40000) then
    Exit;
  Tilex:= iAbs(Tile2.x);
  Tiley:= iAbs(Tile2.y);
  MouseBox(Tilex-ranx, Tiley-rany, Tilex+ranx, Tiley+rany, ClickType);
  Result:= true;
end;

(*
R_OpenDoor
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_OpenDoor(DoorTile: TPoint; TileEdge: String): Boolean;

Attempts to open the door on TileEdge ('N', 'S', 'E' or 'W') of DoorTile.
Returns true if the door was opened.

.. examples:: D = Door [T] = DoorTile

      D
     [T]      R_OpenDoor(Point(x, y), 'N');


     [T]D     R_OpenDoor(Point(x, y), 'E');


     [T]      R_OpenDoor(Point(x, y), 'S');
      D

    D[T]      R_OpenDoor(Point(x, y), 'W');

.. note::

  by Krazy_Meerkat

*)
function R_OpenDoor(DoorTile: TPoint; TileEdge: String): Boolean;
var
  Tilex, Tiley: Integer;
  Tile2: TPoint;
begin
  Result:= false;
  Tile2.x:= 0;
  Tile2.y:= 0;
  if (Lowercase(TileEdge) = 'n') then
    Tile2:= R_TileOffsetToMS(DoorTile, 0, 62, 100);
  if (Lowercase(TileEdge) = 's') then
    Tile2:= R_TileOffsetToMS(DoorTile, 0, -62, 100);
  if (Lowercase(TileEdge) = 'e') then
    Tile2:= R_TileOffsetToMS(DoorTile, 62, 0, 100);
  if (Lowercase(TileEdge) = 'w') then
    Tile2:= R_TileOffsetToMS(DoorTile, -62, 0, 100);
  if (Tile2.x = 0) or (Tile2.y = 0) or (Tile2.x > 40000) or (Tile2.y > 40000) or (Tile2.x < -40000) or (Tile2.y < -40000) then
    Exit;
  Tilex:= iAbs(Tile2.x);
  Tiley:= iAbs(Tile2.y);
  MouseBox(Tilex-5, Tiley-5, Tilex+5, Tiley-5, mouse_move);
  wait(203 + random(188));
  if R_IsUpTextMulti(['Close', 'lose', 'ose', 'los', 'Open', 'Ope', 'pen']) then
  begin
    Result:= R_IsUpTextMulti(['Close', 'lose', 'ose', 'los']); //Door is already open
    if not(Result) then
    begin
      ClickMouse2(true);
      wait(103 + random(288));
      Result:= true;
    end;
  end else
    if (R_IsUpAction) then
    begin
      ClickMouse2(false);
      wait(103 + random(288));
      Result:= R_ChooseOption('Open');
    end;
end;

(*
R_CloseDoor
~~~~~~~~~~~~~~

.. code-block:: pascal

    R_CloseDoor(DoorTile: TPoint; TileEdge: String): Boolean;

See above ^

.. note::

  by Krazy_Meerkat

*)
function R_CloseDoor(DoorTile: TPoint; TileEdge: String): Boolean;
var
  Tilex, Tiley: Integer;
  Tile2: TPoint;
begin
  Result:= false;
  Tile2.x:= 0;
  Tile2.y:= 0;
  if (Lowercase(TileEdge) = 'n') then
    Tile2:= R_TileOffsetToMS(DoorTile, 0, 62, 30);
  if (Lowercase(TileEdge) = 's') then
    Tile2:= R_TileOffsetToMS(DoorTile, 0, -62, 30);
  if (Lowercase(TileEdge) = 'e') then
    Tile2:= R_TileOffsetToMS(DoorTile, 62, 0, 30);
  if (Lowercase(TileEdge) = 'w') then
    Tile2:= R_TileOffsetToMS(DoorTile, -62, 0, 30);
  if (Tile2.x = 0) or (Tile2.y = 0) or (Tile2.x > 40000) or (Tile2.y > 40000) or (Tile2.x < -40000) or (Tile2.y < -40000) then
    Exit;
  Tilex:= iAbs(Tile2.x);
  Tiley:= iAbs(Tile2.y);
  MouseBox(Tilex-2, Tiley-5, Tilex+2, Tiley-5, mouse_move);
  wait(303 + random(88));
  if R_IsUpTextMulti(['Close', 'lose', 'ose', 'los', 'Open', 'Ope', 'pen']) then
  begin
    Result:= R_IsUpText('Open'); //Door is already closed
    if not(Result) then
    begin
      clickMouse2(MOUSE_LEFT);
      Result:= true;
    end;
  end else
  begin
    if (R_IsUpAction) then
    begin
      ClickMouse2(false);
      wait(103 + random(288));
      Result:= R_ChooseOption('Close');
    end;
  end;
end;

function R_ClosestBankBooth: TPoint;
var
  Bankers: TNPCArray;
  me: TPoint;
  i, CommonX, CommonY: Integer;
begin
  Result:= point(-1, -1);
  Bankers:= R_GetNpcs('Banker');
  for I := 1 to High(Bankers) do
  begin
    if (CommonX = 0) and (Bankers[i].tile.x = Bankers[i-1].tile.x) then
    begin
      CommonX:= Bankers[i].tile.x;
    end;
    if (CommonY = 0) and (Bankers[i].tile.y = Bankers[i-1].tile.y) then
    begin
      CommonY:= Bankers[i].tile.y;
    end;
  end;
  me:= R_GetTileGlobal;
  if (CommonX > 0) and (me.x < CommonX) then
    Result:= point(CommonX - 1, Bankers[0].tile.y);
  if (CommonX > 0) and (me.x > CommonX) then
    Result:= point(CommonX + 1, Bankers[0].tile.y);
  if (CommonY > 0) and (me.y < CommonY) then
    Result:= point(Bankers[0].tile.x, CommonY - 1);
  if (CommonY > 0) and (me.y > CommonY) then
    Result:= point(Bankers[0].tile.x, CommonY + 1);
  if (Result.x < 1) then
  begin
    writeln('Couldn''t find any close objects, terminating!');
    TerminateScript;
  end;
end;

function R_SelectOption(Option: String): Boolean;
begin
  Result:= false;
  if (R_IsUpText(Option)) then
  begin
    ClickMouse2(Mouse_Left);
    Result:= true;
  end else
    if (R_IsUpAction) then
    begin
      ClickMouse2(Mouse_Right);
      Result:= ChooseOption(Option);
    end;
end;

function R_InteractTile(Tile: TPoint; Option: String): Boolean;
var
  i: Integer;
begin
  Result:= false;
  repeat
    R_MouseTile(Tile, 15, 15, Mouse_Move);
    wait(100 + random(50));
    if (R_SelectOption(Option)) then
    begin
      i:= 40;
      Result:= true;
    end;
    inc(i);
    if ((i < 41) and (random(100) > 50)) then
      RandomMovement;
  until(i > 40);
end;
